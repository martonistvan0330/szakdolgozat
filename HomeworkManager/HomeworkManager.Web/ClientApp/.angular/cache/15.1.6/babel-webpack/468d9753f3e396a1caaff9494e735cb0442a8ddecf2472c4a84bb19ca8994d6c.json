{"ast":null,"code":"import { AuthenticationRequest } from '../models/auth/authentication-request';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, LoginComponent_div_11_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r0.errors == null ? null : _r0.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password has to be at least 3 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, LoginComponent_div_17_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵtemplate(2, LoginComponent_div_17_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r2 = i0.ɵɵreference(16);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors == null ? null : _r2.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors == null ? null : _r2.errors[\"minLength\"]);\n  }\n}\nfunction LoginComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 21);\n  }\n}\nexport class LoginComponent {\n  constructor(http, baseUrl, router) {\n    this.authRequest = new AuthenticationRequest();\n    this.rememberMe = false;\n    this.loading = false;\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.router = router;\n  }\n  ngOnInit() {}\n  onSubmit() {\n    this.loading = true;\n    this.http.post(this.baseUrl + 'api/auth/bearertoken', this.authRequest).subscribe(response => {\n      this.loading = false;\n      localStorage.setItem(\"access-token\", response.accessToken);\n      localStorage.setItem(\"refresh-token\", response.refreshToken);\n      this.router.navigate(['/', 'fetch-secret']);\n    }, error => {\n      this.loading = false;\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 28,\n  vars: 7,\n  consts: [[1, \"d-flex\", \"justify-content-center\"], [1, \"card\", \"w-25\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"id\", \"username\", \"name\", \"username\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"username\", \"ngModel\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"id\", \"password\", \"name\", \"password\", \"type\", \"password\", \"ng-model\", \"password\", \"required\", \"\", \"minLength\", \"4\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"mb-3\", \"form-check\"], [\"id\", \"remember-me\", \"name\", \"remember-me\", \"type\", \"checkbox\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"remember-me\", 1, \"form-check-label\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../register\", 1, \"btn\", \"btn-link\"], [1, \"alert\", \"alert-danger\", \"mt-3\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\", 2);\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.authRequest.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.authRequest.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 3, 2, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 13)(19, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.rememberMe = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"label\", 15);\n      i0.ɵɵtext(21, \"Remember me\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\")(23, \"button\", 16);\n      i0.ɵɵtemplate(24, LoginComponent_span_24_Template, 1, 0, \"span\", 17);\n      i0.ɵɵtext(25, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"a\", 18);\n      i0.ɵɵtext(27, \"Register\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(10);\n      const _r2 = i0.ɵɵreference(16);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.authRequest.username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r0.invalid && (_r0.dirty || _r0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.authRequest.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r2.invalid && (_r2.dirty || _r2.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.rememberMe);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,qBAAqB,QAAQ,uCAAuC;;;;;;;;ICWjEC,2BAA2C;IACzCA,mCACF;IAAAA,iBAAM;;;;;IALRA,+BACqC;IAEnCA,uEAEM;IAERA,iBAAM;;;;;IAJEA,eAAmC;IAAnCA,yEAAmC;;;;;IAkBzCA,2BAA2C;IACzCA,uCACF;IAAAA,iBAAM;;;;;IAENA,2BAA4C;IAC1CA,2DACF;IAAAA,iBAAM;;;;;IATRA,+BACqC;IAEnCA,uEAEM;IAENA,uEAEM;IAERA,iBAAM;;;;;IAREA,eAAmC;IAAnCA,yEAAmC;IAInCA,eAAoC;IAApCA,0EAAoC;;;;;IAY1CA,2BAA2E;;;ADrCvF,OAAM,MAAOC,cAAc;EAUzBC,YAAYC,IAAgB,EAAsBC,OAAe,EAAEC,MAAc;IATjF,gBAAW,GAA0B,IAAIN,qBAAqB,EAAE;IAChE,eAAU,GAAG,KAAK;IAElB,YAAO,GAAG,KAAK;IAOb,IAAI,CAACI,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EAEAC,QAAQ,IACR;EAEAC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACL,IAAI,CAACM,IAAI,CAAyB,IAAI,CAACL,OAAO,GAAG,sBAAsB,EAAE,IAAI,CAACM,WAAW,CAAC,CAC5FC,SAAS,CACRC,QAAQ,IAAG;MACT,IAAI,CAACJ,OAAO,GAAG,KAAK;MACpBK,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,QAAQ,CAACG,WAAW,CAAC;MAC1DF,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEF,QAAQ,CAACI,YAAY,CAAC;MAC5D,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;IAC7C,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACV,OAAO,GAAG,KAAK;IACtB,CAAC,CACF;EACL;;AAjCWP,cAAc;mBAAdA,cAAc,4DAUa,UAAU;AAAA;AAVrCA,cAAc;QAAdA,cAAc;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BvB,8BAA2C;MAEfA,qBAAK;MAAAA,iBAAK;MAClCA,8BAAuB;MACfA;QAAA,OAAYwB,cAAU;MAAA,EAAC;MAC3BxB,8BAAkB;MACyBA,wBAAQ;MAAAA,iBAAQ;MACzDA,mCAGsC;MAH/BA;QAAA;MAAA,EAAkC;MAAzCA,iBAGsC;MACtCA,iEAOM;MACRA,iBAAM;MACNA,+BAAkB;MACyBA,yBAAQ;MAAAA,iBAAQ;MACzDA,sCAK4B;MALrBA;QAAA;MAAA,EAAkC;MAAzCA,iBAK4B;MAE5BA,iEAWM;MACRA,iBAAM;MACNA,gCAA6B;MACpBA;QAAA;MAAA,EAAwB;MAA/BA,iBAA6G;MAC7GA,kCAAkD;MAAAA,4BAAW;MAAAA,iBAAQ;MAEvEA,4BAAK;MAEDA,oEAA2E;MAC3EA,wBACF;MAAAA,iBAAS;MACTA,8BAAiD;MAAAA,yBAAQ;MAAAA,iBAAI;;;;;MA5CtDA,eAAkC;MAAlCA,kDAAkC;MAInCA,eAA8D;MAA9DA,gEAA8D;MAW7DA,eAAkC;MAAlCA,kDAAkC;MAOnCA,eAA8D;MAA9DA,gEAA8D;MAc7DA,eAAwB;MAAxBA,wCAAwB;MAIvBA,eAAoB;MAApBA,sCAAoB;MACnBA,eAAa;MAAbA,kCAAa","names":["AuthenticationRequest","i0","LoginComponent","constructor","http","baseUrl","router","ngOnInit","onSubmit","loading","post","authRequest","subscribe","response","localStorage","setItem","accessToken","refreshToken","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\SZAKDOLGOZAT\\project\\szakdolgozat\\HomeworkManager\\HomeworkManager.Web\\ClientApp\\src\\app\\login\\login.component.ts","F:\\SZAKDOLGOZAT\\project\\szakdolgozat\\HomeworkManager\\HomeworkManager.Web\\ClientApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationRequest } from '../models/auth/authentication-request';\r\nimport { AuthenticationResponse } from '../models/auth/authentication-response';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  authRequest: AuthenticationRequest = new AuthenticationRequest();\n  rememberMe = false;\n\n  loading = false;\n\n  http: HttpClient;\n  baseUrl: string;\n  router: Router;\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string, router: Router) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.router = router;\n  }\n\n  ngOnInit() {\r\n  }\n\n  onSubmit() {\r\n    this.loading = true;\r\n    this.http.post<AuthenticationResponse>(this.baseUrl + 'api/auth/bearertoken', this.authRequest)\r\n      .subscribe(\r\n        response => {\r\n          this.loading = false;\r\n          localStorage.setItem(\"access-token\", response.accessToken);\r\n          localStorage.setItem(\"refresh-token\", response.refreshToken);\r\n          this.router.navigate(['/', 'fetch-secret']);\r\n        },\r\n        error => {\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\n}\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"card w-25\">\r\n    <h4 class=\"card-header\">Login</h4>\r\n    <div class=\"card-body\">\r\n      <form (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"username\" class=\"form-label\">Username</label>\r\n          <input [(ngModel)]=\"authRequest.username\"\r\n                 id=\"username\" name=\"username\"\r\n                 type=\"text\" class=\"form-control\"\r\n                 required #username=\"ngModel\" />\r\n          <div *ngIf=\"username.invalid && (username.dirty || username.touched)\"\r\n               class=\"alert alert-danger mt-3\">\r\n\r\n            <div *ngIf=\"username.errors?.['required']\">\r\n              Name is required.\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\" class=\"form-label\">Password</label>\r\n          <input [(ngModel)]=\"authRequest.password\"\r\n                 id=\"password\" name=\"password\"\r\n                 type=\"password\" class=\"form-control\"\r\n                 ng-model=\"password\"\r\n                 required minLength=\"4\"\r\n                 #password=\"ngModel\"/>\r\n\r\n          <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\r\n               class=\"alert alert-danger mt-3\">\r\n\r\n            <div *ngIf=\"password.errors?.['required']\">\r\n              Password is required.\r\n            </div>\r\n\r\n            <div *ngIf=\"password.errors?.['minLength']\">\r\n              Password has to be at least 3 characters.\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-3 form-check\">\r\n          <input [(ngModel)]=\"rememberMe\" id=\"remember-me\" name=\"remember-me\" type=\"checkbox\" class=\"form-check-input\">\r\n          <label class=\"form-check-label\" for=\"remember-me\">Remember me</label>\r\n        </div>\r\n        <div>\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n            Login\r\n          </button>\r\n          <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}