{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TokenInterceptor {\n  intercept(req, next) {\n    const userToken = localStorage.getItem('access-token');\n    if (userToken !== null) {\n      const modifiedReq = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${userToken}`)\n      });\n      return next.handle(modifiedReq);\n    }\n    return next.handle(req);\n  }\n}\nTokenInterceptor.ɵfac = function TokenInterceptor_Factory(t) {\n  return new (t || TokenInterceptor)();\n};\nTokenInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokenInterceptor,\n  factory: TokenInterceptor.ɵfac\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,gBAAgB;EAE3BC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACtD,IAAIF,SAAS,KAAK,IAAI,EAAE;MACtB,MAAMG,WAAW,GAAGL,GAAG,CAACM,KAAK,CAAC;QAC5BC,OAAO,EAAEP,GAAG,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUN,SAAS,EAAE;OAChE,CAAC;MACF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,WAAW,CAAC;;IAEjC,OAAOJ,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC;EACzB;;AAXWF,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAY,SAAhBZ,gBAAgB;AAAA","names":["TokenInterceptor","intercept","req","next","userToken","localStorage","getItem","modifiedReq","clone","headers","set","handle","factory"],"sourceRoot":"","sources":["F:\\SZAKDOLGOZAT\\project\\szakdolgozat\\HomeworkManager\\HomeworkManager.Web\\ClientApp\\src\\app\\token-interceptor.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const userToken = localStorage.getItem('access-token');\r\n    if (userToken !== null) {\r\n      const modifiedReq = req.clone({\r\n        headers: req.headers.set('Authorization', `Bearer ${userToken}`),\r\n      });\r\n      return next.handle(modifiedReq);\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}