{"ast":null,"code":"import _asyncToGenerator from \"F:/SZAKDOLGOZAT/project/szakdolgozat/HomeworkManager/HomeworkManager.Web/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { RefreshRequest } from \"./models/auth/refresh-request\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SuperHttpClient {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  get(route, onSuccess, onError) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.http.get(route).subscribe(result => onSuccess(result), error => {\n        if (error.status === 401) {\n          const accessToken = sessionStorage.getItem('access-token');\n          const refreshToken = sessionStorage.getItem('refresh-token');\n          if (accessToken !== null && refreshToken !== null) {\n            _this.http.post(_this.baseUrl + 'api/auth/refresh', new RefreshRequest(accessToken, refreshToken)).subscribe(response => {\n              _this.http.get(route).subscribe(result => onSuccess(result), error => onError(error));\n            }, error => {});\n          }\n        } else {\n          onError(error);\n        }\n      });\n    })();\n  }\n}\nSuperHttpClient.ɵfac = function SuperHttpClient_Factory(t) {\n  return new (t || SuperHttpClient)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nSuperHttpClient.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SuperHttpClient,\n  factory: SuperHttpClient.ɵfac\n});","map":{"version":3,"mappings":";AAGA,SAASA,cAAc,QAAQ,+BAA+B;;;AAG9D,OAAM,MAAOC,eAAe;EAI1BC,YAAYC,IAAgB,EAAsBC,OAAe;IAC/D,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;EACxB;EAEMC,GAAG,CAAIC,KAAa,EAAEC,SAA8B,EAAEC,OAA6B;IAAA;IAAA;MACvF,KAAI,CAACL,IAAI,CAACE,GAAG,CAAIC,KAAK,CAAC,CACpBG,SAAS,CACRC,MAAM,IAAIH,SAAS,CAACG,MAAM,CAAC,EAC3BC,KAAK,IAAG;QACN,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;UACxB,MAAMC,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC;UAC1D,MAAMC,YAAY,GAAGF,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;UAE5D,IAAIF,WAAW,KAAK,IAAI,IAAIG,YAAY,KAAK,IAAI,EAAE;YACjD,KAAI,CAACb,IAAI,CAACc,IAAI,CAAyB,KAAI,CAACb,OAAO,GAAG,kBAAkB,EAAE,IAAIJ,cAAc,CAACa,WAAW,EAAEG,YAAY,CAAC,CAAC,CACrHP,SAAS,CACRS,QAAQ,IAAG;cACT,KAAI,CAACf,IAAI,CAACE,GAAG,CAAIC,KAAK,CAAC,CACpBG,SAAS,CACRC,MAAM,IAAIH,SAAS,CAACG,MAAM,CAAC,EAC3BC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,CACxB;YACL,CAAC,EACDA,KAAK,IAAG,CAAG,CAAC,CACb;;SAEN,MAAM;UACLH,OAAO,CAACG,KAAK,CAAC;;MAElB,CAAC,CAAC;IAAC;EACT;;AAnCWV,eAAe;mBAAfA,eAAe,0CAIY,UAAU;AAAA;AAJrCA,eAAe;SAAfA,eAAe;EAAAkB,SAAflB,eAAe;AAAA","names":["RefreshRequest","SuperHttpClient","constructor","http","baseUrl","get","route","onSuccess","onError","subscribe","result","error","status","accessToken","sessionStorage","getItem","refreshToken","post","response","factory"],"sourceRoot":"","sources":["F:\\SZAKDOLGOZAT\\project\\szakdolgozat\\HomeworkManager\\HomeworkManager.Web\\ClientApp\\src\\app\\super-http-client.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { AuthenticationResponse } from \"./models/auth/authentication-response\";\r\nimport { RefreshRequest } from \"./models/auth/refresh-request\";\r\n\r\n@Injectable()\r\nexport class SuperHttpClient {\r\n  private readonly http: HttpClient;\r\n  private readonly baseUrl: string;\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl\r\n  }\r\n\r\n  async get<T>(route: string, onSuccess: (result: T) => void, onError: (error: any) => void) {\r\n    this.http.get<T>(route)\r\n      .subscribe(\r\n        result => onSuccess(result),\r\n        error => {\r\n          if (error.status === 401) {\r\n            const accessToken = sessionStorage.getItem('access-token');\r\n            const refreshToken = sessionStorage.getItem('refresh-token');\r\n\r\n            if (accessToken !== null && refreshToken !== null) {\r\n              this.http.post<AuthenticationResponse>(this.baseUrl + 'api/auth/refresh', new RefreshRequest(accessToken, refreshToken))\r\n                .subscribe(\r\n                  response => {\r\n                    this.http.get<T>(route)\r\n                      .subscribe(\r\n                        result => onSuccess(result),\r\n                        error => onError(error)\r\n                      )\r\n                  },\r\n                  error => { }\r\n                );\r\n            }\r\n          } else {\r\n            onError(error);\r\n          }\r\n        });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}