{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../super-http-client\";\nimport * as i2 from \"@angular/common\";\nfunction FetchSecretComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchSecretComponent_table_5_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const forecast_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.temperatureC);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.temperatureF);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.summary);\n  }\n}\nfunction FetchSecretComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Temp. (C)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Temp. (F)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Summary\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, FetchSecretComponent_table_5_tr_12_Template, 9, 4, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.forecasts);\n  }\n}\nexport class FetchSecretComponent {\n  constructor(http, baseUrl) {\n    this.forecasts = [];\n    http.get(baseUrl + 'api/weatherforecast/secret');\n    //http.get<WeatherForecast[]>(baseUrl + 'api/weatherforecast/secret')\n    //  .subscribe(\n    //    result => {\n    //      this.forecasts = result;\n    //    },\n    //    error => console.error(error));\n  }\n}\n\nFetchSecretComponent.ɵfac = function FetchSecretComponent_Factory(t) {\n  return new (t || FetchSecretComponent)(i0.ɵɵdirectiveInject(i1.SuperHttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchSecretComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchSecretComponent,\n  selectors: [[\"app-fetch-secret\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchSecretComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchSecretComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, FetchSecretComponent_table_5_Template, 13, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.forecasts == null ? null : ctx.forecasts.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecasts.length);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAIAA,yBAA8B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAY7CA,0BAAuC;IACjCA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;;;;IAH3BA,eAAmB;IAAnBA,sCAAmB;IACnBA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAsB;IAAtBA,yCAAsB;;;;;IAdhCA,gCAAyF;IAG/EA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,wBAAO;IAAAA,iBAAK;IAGpBA,8BAAO;IACLA,6EAKK;IACPA,iBAAQ;;;;IANmBA,gBAAY;IAAZA,0CAAY;;;ACRzC,OAAM,MAAOC,oBAAoB;EAG/BC,YAAYC,IAAqB,EAAsBC,OAAe;IAF/D,cAAS,GAAsB,EAAE;IAGtCD,IAAI,CAACE,GAAG,CAAoBD,OAAO,GAAG,4BAA4B,CAAC;IACvE;IACI;IACA;IACA;IACA;IACA;EACF;;;AAXWH,oBAAoB;mBAApBA,oBAAoB,iEAGY,UAAU;AAAA;AAH1CA,oBAAoB;QAApBA,oBAAoB;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRjCV,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,iEAAqD;MAErDA,0EAiBQ;;;MAnBJA,eAAwB;MAAxBA,6EAAwB;MAEqCA,eAAsB;MAAtBA,2CAAsB","names":["i0","FetchSecretComponent","constructor","http","baseUrl","get","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\SZAKDOLGOZAT\\project\\szakdolgozat\\HomeworkManager\\HomeworkManager.Web\\ClientApp\\src\\app\\fetch-secret\\fetch-secret.component.html","F:\\SZAKDOLGOZAT\\project\\szakdolgozat\\HomeworkManager\\HomeworkManager.Web\\ClientApp\\src\\app\\fetch-secret\\fetch-secret.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts?.length\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SuperHttpClient } from '../super-http-client';\r\n\n@Component({\n  selector: 'app-fetch-secret',\n  templateUrl: './fetch-secret.component.html'\n})\nexport class FetchSecretComponent {\n  public forecasts: WeatherForecast[] = [];\n\n  constructor(http: SuperHttpClient, @Inject('BASE_URL') baseUrl: string) {\n    http.get<WeatherForecast[]>(baseUrl + 'api/weatherforecast/secret');\n//http.get<WeatherForecast[]>(baseUrl + 'api/weatherforecast/secret')\n    //  .subscribe(\n    //    result => {\n    //      this.forecasts = result;\n    //    },\n    //    error => console.error(error));\n  }\n}\n\ninterface WeatherForecast {\n  date: string;\n  temperatureC: number;\n  temperatureF: number;\n  summary: string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}